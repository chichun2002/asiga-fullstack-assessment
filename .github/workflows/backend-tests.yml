name: Backend Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: products_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'  # Adjust to your Go version
      
      - name: Create env file
        run: |
          cd backend
          # Create the env file from GitHub secrets or use defaults
          cat > .env << EOF
          DB_HOST=localhost
          DB_PORT=5432
          DB_USER=admin
          DB_PASSWORD=secret
          DB_NAME=products_db
          # Add other environment variables from your local_dev.env
          EOF
      
      - name: Install dependencies
        run: cd backend && go mod download
      
      - name: Run backend server
        run: cd backend && go run main.go &
        env:
          # Add any environment variables needed for the backend
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: admin
          DB_PASSWORD: secret
          DB_NAME: products_db
      
      - name: Wait for backend to start
        run: |
          # Wait for the backend to be ready
          for i in {1..10}; do
            if curl -s http://localhost:8080/health > /dev/null; then
              echo "Backend is up!"
              break
            fi
            echo "Waiting for backend..."
            sleep 3
          done
      
      - name: Run backend tests
        run: cd backend && go test -v ./... -tags=integration
        env:
          # Add any environment variables needed for tests
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: admin
          DB_PASSWORD: secret
          DB_NAME: products_db